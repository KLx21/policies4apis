{"host":"petstore.swagger.io","protocol":"http","basePath":"/v2","rules":[{"path":"/pet","method":"post","produces":["application/xml","application/json"],"frontendPath":"/pet","requestRules":[{"policyName":"mg-req-transformation","parameters":[{"name":"name","value":"healthcheck","type":"String"},{"name":"description","type":"String"},{"name":"formatRequestFunc","value":"var categoryName = payload.category.name;\n  var moment = require('moment');\n  if (categoryName) {\n    var iconUrl = \"http://test.com/\"+ moment().format();\n    switch (categoryName) {\n    case 'dog':\n      iconUrl += 'dog.png';\n      break;\n    case 'cat':\n      iconUrl += 'cat.png';\n      break;\n    default:\n      iconUrl += 'default.png';\n  }\n    payload.photoUrls = [iconUrl];\n  }\n  done(payload);","type":"String"}]}],"responseRules":[{"policyName":"mg-res-transformation","parameters":[{"name":"name","value":"transform","type":"String"},{"name":"description","type":"String"},{"name":"formatResponseFunc","value":"var uuid = require('uuid');\n  var moment = require('moment');\n  res.uuidX = uuid.v1();\n  res.momentA=moment().format();\n  done(res);\n","type":"String"}]},{"policyName":"mg-res-custom-js","parameters":[{"name":"name","value":"cus","type":"String"},{"name":"description","type":"String"},{"name":"formatResponseFunc","value":"\tvar uuid = require ('uuid');\n  var moment = require ('moment');\n  res.uuidparse = uuid.parse('797ff043-11eb-11e1-80d6-510998755d10');\n  res.vendor = 'abc';\n  res.output = uuid.v1();\n  res.moment=moment().format();\n  done(res);","type":"String"}]}],"operationId":"addPet","consumes":["application/json","application/xml"]},{"path":"/pet","method":"put","produces":["application/xml","application/json"],"frontendPath":"/pet","requestRules":[{"policyName":"mg-req-transformation","parameters":[{"name":"name","value":"trans","type":"String"},{"name":"description","type":"String"},{"name":"formatRequestFunc","value":"\tvar categoryName = payload.category.name;\n  var moment = require('moment');\n  if (categoryName) {\n    var iconUrl = \"http://test.com/\"+ moment().format();\n    switch (categoryName) {\n    case 'dog':\n      iconUrl += 'dog.png';\n      break;\n    case 'cat':\n      iconUrl += 'cat.png';\n      break;\n    default:\n      iconUrl += 'default.png';\n  }\n    payload.photoUrls = [iconUrl];\n  }\n  done(payload);\n","type":"String"}]}],"responseRules":[],"operationId":"updatePet","consumes":["application/json","application/xml"]},{"path":"/user","method":"post","produces":["application/xml","application/json"],"frontendPath":"/user","requestRules":[],"responseRules":[],"operationId":"createUser","consumes":[]},{"path":"/pet/{petId}","method":"get","produces":["application/xml","application/json"],"frontendPath":"<unlinked>","requestRules":[],"responseRules":[],"operationId":"getPetById"},{"path":"/user/login","method":"get","produces":["application/xml","application/json"],"frontendPath":"/user/login","requestRules":[],"responseRules":[],"operationId":"loginUser"},{"path":"/pet/{petId}","method":"post","produces":["application/xml","application/json"],"frontendPath":"/pet/{petId}","requestRules":[],"responseRules":[],"operationId":"updatePetWithForm","consumes":["application/x-www-form-urlencoded"]},{"path":"/pet/{petId}","method":"delete","produces":["application/xml","application/json"],"frontendPath":"/pet/{petId}","requestRules":[],"responseRules":[],"operationId":"deletePet"},{"path":"/store/order","method":"post","produces":["application/xml","application/json"],"frontendPath":"/store/order","requestRules":[],"responseRules":[],"operationId":"placeOrder","consumes":[]},{"path":"/user/logout","method":"get","produces":["application/xml","application/json"],"frontendPath":"/user/logout","requestRules":[],"responseRules":[],"operationId":"logoutUser"},{"path":"/pet/findByTags","method":"get","produces":["application/xml","application/json"],"frontendPath":"/pet/findByTags","requestRules":[],"responseRules":[],"operationId":"findPetsByTags"},{"path":"/store/inventory","method":"get","produces":["application/json"],"frontendPath":"/store/inventory","requestRules":[],"responseRules":[{"policyName":"mg-res-transformation","parameters":[{"name":"name","value":"async","type":"String"},{"name":"description","type":"String"},{"name":"formatResponseFunc","value":"\tvar _ = require('lodash');\n  var async = require('async');\n  var request = require('request');\n  async.series([\n  function(callback)\n    {\n      request('http://www.outlook.com', function (error, response, body) \n        {\n         if (!error && response.statusCode == 200) \n         {\n           callback(null,response.statusCode);\n         }\n      });\n    },\n  function(callback)\n    {\n      request('http://www.yahoo.com', function (error, response, body) \n        {\n         if (!error && response.statusCode == 200) \n         {\n           callback(null,response.statusCode);\n         }\n      });\n    }\n  ],\n  function(err, results)\n    {\n      res = {\n         raw: res,\n    \t total: res.length,\n   \t\t vendor: 'TIBCO',\n    \t result: results\n       };\n    done(res);\n  }\n );\n","type":"String"}]}],"operationId":"getInventory"},{"path":"/user/{username}","method":"get","produces":["application/xml","application/json"],"frontendPath":"/user/{username}","requestRules":[],"responseRules":[],"operationId":"getUserByName"},{"path":"/user/{username}","method":"put","produces":["application/xml","application/json"],"frontendPath":"/user/{username}","requestRules":[],"responseRules":[],"operationId":"updateUser","consumes":[]},{"path":"/user/{username}","method":"delete","produces":["application/xml","application/json"],"frontendPath":"/user/{username}","requestRules":[],"responseRules":[],"operationId":"deleteUser"},{"path":"/pet/findByStatus","method":"get","produces":["application/xml","application/json"],"frontendPath":"/pet/findByStatus","requestRules":[{"policyName":"mg-req-throttle","parameters":[{"name":"numberOfTransactionsPerSecond","value":1,"type":"Number","description":"Number of transactions allowed in rolling window"}]},{"policyName":"mg-req-caching","parameters":[{"name":"timeUnit","value":"seconds","type":"String"},{"name":"time","value":10,"type":"Number"}]},{"policyName":"mg-req-custom-js","parameters":[{"name":"name","value":"setdefault","type":"String"},{"name":"description","type":"String"},{"name":"formatRequestFunc","value":"\t  var _ = require('lodash');\n  if ( _.isEmpty(_.trim(req.query.status))) {\n    req.query.status = 'all';\n  } \n\n  done(req);\n","type":"String"}]},{"policyName":"mg-req-routing","parameters":[{"name":"routes","items":[{"parameters":[{"name":"condition","type":"String","description":"The condition of a route","value":"req.query.status && /all/.test(req.query.status)"},{"name":"preDestTransformFunction","type":"String","description":"The transformation function before destination.","value":"\tdone(payload);\n"},{"name":"destination","type":"String","description":"The destination of this route.","value":"/v2/pet/findByStatus?status=pending,sold"},{"name":"postDestTransformFunction","type":"String","description":"The transformation function after destination.","value":" var _ = require('lodash');\n if ( _.isArray(res) ) {\n   res = {\n     response: res,\n     isRouted: true\n   };\n } \n\n done(res);\n"}]}],"type":"Array","description":"An array of routes."}]}],"responseRules":[{"policyName":"mg-res-transformation","parameters":[{"name":"name","value":"trans","type":"String"},{"name":"description","type":"String"},{"name":"formatResponseFunc","value":"\tvar _ = require('lodash');\n \n  // ensure the response is an object\n  if (_.isArray(res)) {\n    res = {\n      response: res\n    };\n  }\n  res.vendor = 'TIBCO Cloud';\n\n  done(res);\n","type":"String"}]},{"policyName":"mg-res-custom-js","parameters":[{"name":"name","value":"custom res","type":"String"},{"name":"description","type":"String"},{"name":"formatResponseFunc","value":"\tvar _ = require('lodash');\n   \n  if (_.isArray(res)) {\n    res.push({\n      total: res.length\n    });\n  } else if (_.isObject(res) && _.isArray(res.response)) {\n    res.total = res.response.length;\n  }\n\n  done(res);\n","type":"String"}]}],"operationId":"findPetsByStatus"},{"path":"/user/createWithList","method":"post","produces":["application/xml","application/json"],"frontendPath":"/user/createWithList","requestRules":[],"responseRules":[],"operationId":"createUsersWithListInput","consumes":[]},{"path":"/user/createWithArray","method":"post","produces":["application/xml","application/json"],"frontendPath":"/user/createWithArray","requestRules":[{"policyName":"mg-req-throttle","parameters":[{"name":"numberOfTransactionsPerSecond","value":1,"type":"Number","description":"Number of transactions allowed in rolling window"}]},{"policyName":"mg-req-transformation","parameters":[{"name":"name","value":"createwitharray","type":"String"},{"name":"description","type":"String"},{"name":"formatRequestFunc","value":"\tvar _ = require('lodash');\n  if(payload&&payload.length>=4){\n    var newPayload = _.slice(payload, 0, 3);\n    payload = newPayload;\n  } \n\n  done(payload);\n\n","type":"String"}]}],"responseRules":[{"policyName":"mg-res-transformation","parameters":[{"name":"name","value":"add message","type":"String"},{"name":"description","type":"String"},{"name":"formatResponseFunc","value":"\t var _ = require('lodash');\n  if(!res){\n    res = {\n      \"message\": \"If you pass more then 3 user, we just save the first 3 user, other user will be dropped\"\n    };\n  }else if(_.isObject(res)){\n    res.message = \"If you pass more then 3 user, we just save the first 3 user, other user will be dropped\";\n  } \n\n  done(res);\n\n","type":"String"}]}],"operationId":"createUsersWithArrayInput","consumes":[]},{"path":"/store/order/{orderId}","method":"get","produces":["application/xml","application/json"],"frontendPath":"/store/order/{orderId}","requestRules":[],"responseRules":[],"operationId":"getOrderById"},{"path":"/store/order/{orderId}","method":"delete","produces":["application/xml","application/json"],"frontendPath":"/store/order/{orderId}","requestRules":[],"responseRules":[],"operationId":"deleteOrder"},{"path":"/pet/{petId}/uploadImage","method":"post","produces":["application/json"],"frontendPath":"/pet/{petId}/uploadImage","requestRules":[],"responseRules":[],"operationId":"uploadFile","consumes":["multipart/form-data"]}]}